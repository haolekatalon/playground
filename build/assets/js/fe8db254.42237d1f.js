"use strict";(self.webpackChunkplayground=self.webpackChunkplayground||[]).push([[6654],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>g});var a=o(67294);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,a,i=function(e,t){if(null==e)return{};var o,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var o=e.components,i=e.mdxType,n=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(o),d=i,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||n;return o?a.createElement(g,r(r({ref:t},c),{},{components:o})):a.createElement(g,r({ref:t},c))}));function g(e,t){var o=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=o.length,r=new Array(n);r[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:i,r[1]=l;for(var s=2;s<n;s++)r[s]=o[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,o)}d.displayName="MDXCreateElement"},58788:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var a=o(87462),i=(o(67294),o(3905));const n={id:"concept-a13143d5-dfc4-4b9f-84d0-fc9f85a55c40",slug:"/create-tests/manage-projects/set-up-projects/mobile-testing/ios/mobile-ios-setup-real-devices-in-katalon-studio"},r="[Mobile] iOS Setup (Real devices) in Katalon Studio",l={unversionedId:"concept-a13143d5-dfc4-4b9f-84d0-fc9f85a55c40",id:"concept-a13143d5-dfc4-4b9f-84d0-fc9f85a55c40",title:"\\[Mobile\\] iOS Setup \\(Real devices\\) in Katalon Studio",description:"This article shows you how to set up real iOS devices to test iOS applications with Katalon Studio.",source:"@site/docs/concept-a13143d5-dfc4-4b9f-84d0-fc9f85a55c40.mdx",sourceDirName:".",slug:"/create-tests/manage-projects/set-up-projects/mobile-testing/ios/mobile-ios-setup-real-devices-in-katalon-studio",permalink:"/create-tests/manage-projects/set-up-projects/mobile-testing/ios/mobile-ios-setup-real-devices-in-katalon-studio",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concept-a13143d5-dfc4-4b9f-84d0-fc9f85a55c40.mdx",tags:[],version:"current",frontMatter:{id:"concept-a13143d5-dfc4-4b9f-84d0-fc9f85a55c40",slug:"/create-tests/manage-projects/set-up-projects/mobile-testing/ios/mobile-ios-setup-real-devices-in-katalon-studio"},sidebar:"tutorialSidebar",previous:{title:"\\[Mobile\\] iOS Setup \\(Simulators\\) in Katalon Studio",permalink:"/create-tests/manage-projects/set-up-projects/mobile-testing/ios/mobile-ios-setup-simulators-in-katalon-studio"},next:{title:"\\[Mobile\\] Install WebDriverAgent for real iOS devices in Katalon Studio",permalink:"/create-tests/manage-projects/set-up-projects/mobile-testing/ios/mobile-install-webdriveragent-for-real-ios-devices-in-katalon-studio"}},p={},s=[{value:"Part 1: Install Xcode",id:"part-1-install-xcode",level:2},{value:"Part 2: Install Appium, Xcode command-line tools, and other iOS dependencies",id:"part-2-install-appium-xcode-command-line-tools-and-other-ios-dependencies",level:2},{value:"Install with built-in tools",id:"install-with-built-in-tools",level:3},{value:"Install manually",id:"install-manually",level:3},{value:"Part 3: Set up the real iOS devices for mobile testing in Katalon Studio",id:"part-3-set-up-the-real-ios-devices-for-mobile-testing-in-katalon-studio",level:2},{value:"Part 4: Install the WebDriverAgent",id:"part-4-install-the-webdriveragent",level:2},{value:"Part 5: Distribute your app for testing on registered devices",id:"part-5-distribute-your-app-for-testing-on-registered-devices",level:2},{value:"Prepare your app for distribution",id:"prepare-your-app-for-distribution",level:3},{value:"Create an archive of your app",id:"create-an-archive-of-your-app",level:3},{value:"Export your app using an ad hoc or development provisioning profile",id:"export-your-app-using-an-ad-hoc-or-development-provisioning-profile",level:3},{value:"Install the app on user devices",id:"install-the-app-on-user-devices",level:3}],c={toc:s},u="wrapper";function m(e){let{components:t,...o}=e;return(0,i.kt)(u,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mobile-ios-setup-real-devices-in-katalon-studio"},"[","Mobile","]"," iOS Setup ","(","Real devices",")"," in Katalon Studio"),(0,i.kt)("p",null,"This article shows you how to set up real iOS devices to test iOS applications with Katalon Studio."),(0,i.kt)("p",null,"To begin with, you need to setup a macOS environment. You can not execute iOS mobile testing in Windows or Linux."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Related information"),"  "),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/get-started/sample-projects/mobile/mobile-create-and-run-ios-test-case-in-katalon-studio"},"[","Mobile","]"," Create and Run iOS Test Case in Katalon Studio")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/create-tests/troubleshooting-for-test-creation/troubleshoot-mobile-automated-testing/troubleshooting-automated-mobile-testing-overview"},"Troubleshooting automated mobile testing overview")),(0,i.kt)("h2",{id:"part-1-install-xcode"},"Part 1: Install Xcode"),(0,i.kt)("p",null,"Install Xcode version 10.2 or newer. You can download Xcode from the App Store or the Apple Developer website: ",(0,i.kt)("a",{parentName:"p",href:"https://developer.apple.com/xcode/"},"Xcode 13"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Katalon Studio does not officially support Xcode 14 at the moment."),(0,i.kt)("li",{parentName:"ul"},"Xcode must support the current version of your iOS device. To learn more about the supported environments in Katalon Studio, see: ",(0,i.kt)("a",{parentName:"li",href:"/supported-execution-environments/supported-environments-for-katalon-studio-and-katalon-runtime-engine-kre"},"Supported environments"),"."))),(0,i.kt)("h2",{id:"part-2-install-appium-xcode-command-line-tools-and-other-ios-dependencies"},"Part 2: Install Appium, Xcode command-line tools, and other iOS dependencies"),(0,i.kt)("h3",{id:"install-with-built-in-tools"},"Install with built-in tools"),(0,i.kt)("p",null,"From Katalon Studio version 8.3.0 onwards, you can install Appium and Xcode command-line tools ","(","Xcode CLT",")"," via Katalon built-in tools. To do so:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open Katalon Studio and go to ",(0,i.kt)("strong",{parentName:"p"},"Tools")," ",">"," ",(0,i.kt)("strong",{parentName:"p"},"iOS")," ",">"," ",(0,i.kt)("strong",{parentName:"p"},"Dependencies"),"."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Simulators/Pictures/KS-825-Install-dependencies-via-built-in-tools.png",width:500,alt:"Install dependencies via Katalon built-in tools"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Katalon will automatically install the latest version of Xcode CLT, Appium, Homebrew, NodeJS, and other iOS dependencies."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Simulators/Pictures/KS-825-KS-install-dependencies.png",width:500,alt:"KS installs dependencies"}))),(0,i.kt)("h3",{id:"install-manually"},"Install manually"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install the command-line tool for Xcode. You can download the command-line tool compatible with your Xcode version from the Apple Developer website here: ",(0,i.kt)("a",{parentName:"p",href:"https://developer.apple.com/download/all/"},"Download"),"."),(0,i.kt)("p",{parentName:"li"},"Alternatively, you can copy and paste the following command-line arguments in this order in the ",(0,i.kt)("strong",{parentName:"p"},"Terminal")," to install the command-line tool for Xcode:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"xcode-select --install\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"sudo xcode-select -s /Applications/Xcode.app/Contents/Developer\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Download and install Node.js from the Node.js website: ",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Node.js Downloads"),"."),(0,i.kt)("admonition",{parentName:"li",type:"note"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Make sure you install Node.js into a location where you have full Read/Write permissions.")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install Appium version 1.12.1 or newer via NPM. To install the latest Appium version, copy and paste the command-line argument as follows:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"npm install -g appium\n")),(0,i.kt)("admonition",{parentName:"li",type:"note"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"We recommend installing the latest Appium version."),(0,i.kt)("li",{parentName:"ul"},"Katalon Studio does not officially support Appium 2.x yet."),(0,i.kt)("li",{parentName:"ul"},"If you are using emulators other than Xcode simulators, some emulators come with Appium installed. If you want to run an application on an emulator, check your emulator settings before installing Appium."))),(0,i.kt)("p",{parentName:"li"},"To learn more about Appium, you can refer to the Appium document here: ",(0,i.kt)("a",{parentName:"p",href:"http://appium.io/docs/en/about-appium/getting-started/#installing-appium"},"Getting started"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install Homebrew. Homebrew is a package manager that makes it easy to install extra dependencies. To install Homebrew, follow the instructions on the Homebrew website: ",(0,i.kt)("a",{parentName:"p",href:"https://brew.sh/"},"Homebrew"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"After installing Homebrew, you can now use it to install the following dependencies in the ",(0,i.kt)("strong",{parentName:"p"},"Terminal"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"ios-deploy version 1.9.4 or newer. You can learn more about ios-deploy in this Github project: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ios-control/ios-deploy"},"ios-deploy"),". To install ios-deploy via Homebrew, copy and paste the command-line argument as below:"),(0,i.kt)("code",null,"brew install ios-deploy")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"usbmuxd version 1.0.10 or newer. You can learn more about usbmuxd in this Github project: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/libimobiledevice/usbmuxd"},"usbmuxd"),". To install usbmuxd via Homebrew, copy and paste the following command-line arguments in this order:"),(0,i.kt)("code",null,"brew install --HEAD usbmuxd"),(0,i.kt)("code",null,"brew unlink usbmuxd"),(0,i.kt)("code",null,"brew link usbmuxd")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"libimobiledevice version 1.2.0 or newer. You can learn more about libimobiledevice on the libimobiledevice website: ",(0,i.kt)("a",{parentName:"p",href:"https://libimobiledevice.org/"},"libimobiledevice"),". To install libimobiledevice via Homebrew, copy and paste the following command-line arguments in this order:"),(0,i.kt)("code",null,"brew install --HEAD libimobiledevice"),(0,i.kt)("code",null,"brew unlink libimobiledevice"),(0,i.kt)("code",null,"brew link libimobiledevice")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For Appium versions older than 1.20.0, you need to install Carthage. You can learn more about Carthage in this Github project: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Carthage/Carthage"},"Carthage"),". To install Carthage via Homebrew, copy and paste the command-line argument below:"),(0,i.kt)("code",null,"brew install carthage")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For Appium versions older than 1.15.0, you also need to install ios-webkit-debug-proxy. You can learn more about ios-webkit-debug-proxy in this Github project: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/google/ios-webkit-debug-proxy"},"ios-webkit-debug-proxy"),". To install ios-webkit-debug-proxy via Homebrew, copy and paste the command-line argument as below:"),(0,i.kt)("code",null,"brew install ios-webkit-debug-proxy"))))),(0,i.kt)("h2",{id:"part-3-set-up-the-real-ios-devices-for-mobile-testing-in-katalon-studio"},"Part 3: Set up the real iOS devices for mobile testing in Katalon Studio"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"You have enrolled in the Apple Developer Program. To learn more about the Apple Developer Program enrollment, you can refer to this Apple document: ",(0,i.kt)("a",{parentName:"li",href:"https://developer.apple.com/support/enrollment/"},"Enrollment"),"."))),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Any device for development with Xcode must be listed in the Apple Developer Portal. To learn about listing your device in Apple Developer Portal, you can refer to this wikiHow document: ",(0,i.kt)("a",{parentName:"p",href:"https://www.wikihow.com/Add-a-New-Device-to-Your-Apple-Developer-Portal"},"How to Add a New Device to Your Apple Developer Portal"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In ",(0,i.kt)("strong",{parentName:"p"},"Xcode ",">"," Preferences ",">"," Account"),", click ",(0,i.kt)("em",{parentName:"p"},"Add")," ","(","+",")"," to enter your Apple Developer Account ID and password.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Connect your iOS devices to your computer via a USB cable. Confirm to accept or trust the phone.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To enable ",(0,i.kt)("strong",{parentName:"p"},"UI Automation")," on the device, navigate to ",(0,i.kt)("strong",{parentName:"p"},"Settings ",">"," Developer"),". In the ",(0,i.kt)("strong",{parentName:"p"},"UI Automation")," section, turn on the setting for ",(0,i.kt)("strong",{parentName:"p"},"Enable UI Automation"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If you want to execute your tests using Safari on iOS ","(","mobile browser",")",", you will need to enable the following settings in ",(0,i.kt)("strong",{parentName:"p"},"Settings ",">"," Safari ",">"," Advanced"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"JavaScript"),(0,i.kt)("li",{parentName:"ul"},"Web Inspector"),(0,i.kt)("li",{parentName:"ul"},"Remote Automation",(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Real_Device/Pictures/KS-IOS-Safari-Web-Inspector.png",alt:"Enable debug mode in iOS devices"}))))),(0,i.kt)("h2",{id:"part-4-install-the-webdriveragent"},"Part 4: Install the WebDriverAgent"),(0,i.kt)("p",null,"The WebDriverAgent is a WebDriver server used to control iOS devices remotely. To install the WebDriverAgent, you can refer to this document: ",(0,i.kt)("a",{parentName:"p",href:"/create-tests/manage-projects/set-up-projects/mobile-testing/ios/mobile-install-webdriveragent-for-real-ios-devices-in-katalon-studio"},"Install WebDriverAgent for iOS devices"),"."),(0,i.kt)("h2",{id:"part-5-distribute-your-app-for-testing-on-registered-devices"},"Part 5: Distribute your app for testing on registered devices"),(0,i.kt)("p",null,"To distribute your app for testing on registered devices, you need to archive and export an ",(0,i.kt)("code",null,".ipa")," file. Do as follows:"),(0,i.kt)("h3",{id:"prepare-your-app-for-distribution"},"Prepare your app for distribution"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the project file with Xcode. For example, to open ",(0,i.kt)("code",null,"Coffee Timer.xcodeproj"),", from where you store the project ",">"," ",(0,i.kt)("strong",{parentName:"p"},"App")," ",">"," ",(0,i.kt)("strong",{parentName:"p"},"Your-First-iOS-App")," ",">"," ",(0,i.kt)("strong",{parentName:"p"},"Coffee Timer"),". Double-click the ",(0,i.kt)("code",null,"Coffee Timer.xcodeproj")," file."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Real_Device/Pictures/open-xcode-file.png",alt:"Open Xcode project"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"After opening the project in Xcode, select a registered iOS device to launch the apps."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Real_Device/Pictures/select-device.png",width:300,alt:"Select device"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("strong",{parentName:"p"},"General")," tab, set deployment iOS version and select device type in the ",(0,i.kt)("strong",{parentName:"p"},"Deployment Info")," section."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Real_Device/Pictures/deployment.png",width:500,alt:"Choose deployment info"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Switch to the ",(0,i.kt)("strong",{parentName:"p"},"Signing & Capabilities")," tab, check the ",(0,i.kt)("strong",{parentName:"p"},"Automatically manage signing")," box, then choose the team that has your device registered in the Apple Developer Portal."),(0,i.kt)("p",{parentName:"li"},"By choosing the ",(0,i.kt)("strong",{parentName:"p"},"Automatically manage signing")," box, Xcode manages code signing assets for you. To learn more about automatic signing, you can refer to this Apple document: ",(0,i.kt)("a",{parentName:"p",href:"https://help.apple.com/xcode/mac/current/#/dev80cc24546"},"Automatic signing"),"."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Real_Device/Pictures/KS-825-Enable-automatic-signing.png",alt:"Auto manage signing"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To build the ",(0,i.kt)("code",null,".ipa")," file, click ",(0,i.kt)("strong",{parentName:"p"},"Product ",">"," Build"),"."))),(0,i.kt)("h3",{id:"create-an-archive-of-your-app"},"Create an archive of your app"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To archive the ",(0,i.kt)("code",null,".ipa")," file, click ",(0,i.kt)("strong",{parentName:"p"},"Product ",">"," Archive"),". If the archive builds successfully, it appears in the Archives organizer."),(0,i.kt)("admonition",{parentName:"li",type:"note"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"You can't create an archive if you set the run destination to a simulator."))))),(0,i.kt)("h3",{id:"export-your-app-using-an-ad-hoc-or-development-provisioning-profile"},"Export your app using an ad hoc or development provisioning profile"),(0,i.kt)("p",null,"When you export the app, Xcode re-signs the app using the code signing assets that you choose. To learn more about the distribution method, you can refer to this Apple document:",(0,i.kt)("a",{parentName:"p",href:"https://help.apple.com/xcode/mac/current/#/dev31de635e5"},"Distribution method.")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To open the Archives organizer, choose ",(0,i.kt)("strong",{parentName:"p"},"Window")," ",">"," ",(0,i.kt)("strong",{parentName:"p"},"Organizer")," and click ",(0,i.kt)("strong",{parentName:"p"},"Archives"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Select the archive you want to export, then click ",(0,i.kt)("strong",{parentName:"p"},"Distribute App")," and follow the instructions to get the ",(0,i.kt)("code",null,".ipa")," file. Here, we choose a development provisioning profile to export the ",(0,i.kt)("code",null,"Coffee Timer.ipa")," file."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Real_Device/Pictures/export.gif",alt:"Distribute .ipa app"}))),(0,i.kt)("h3",{id:"install-the-app-on-user-devices"},"Install the app on user devices"),(0,i.kt)("p",null,"To verify the ",(0,i.kt)("code",null,".ipa")," file, follow these steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open Xcode, then navigate to ",(0,i.kt)("strong",{parentName:"p"},"Window ",">"," Devices and Simulators"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Choose your device from the ",(0,i.kt)("strong",{parentName:"p"},"Devices")," list.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click ",(0,i.kt)("em",{parentName:"p"},"Add")," ","(","+",")"," to browse the ",(0,i.kt)("code",null,".ipa")," file."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Real_Device/Pictures/KS-iOS-Install-.png",alt:"Add an app to a real device"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Once installed successfully, the application appears in the ",(0,i.kt)("strong",{parentName:"p"},"Installed Apps")," section."),(0,i.kt)("img",{src:"/doc_images/Documents/Create_tests/Manage_Projects/Set_Up_Projects/Mobile-Testing/iOS/Mobile_iOS_Setup_Real_Device/Pictures/KS-install-app-via-Xcode.png",alt:"App installed successfully"}))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Learn more with our Katalon Academy course"),"  "),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://academy.katalon.com/courses/codeless-solution-mobile-testing/?utm_source=kat_docs&utm_medium=ios_setup"},"Solve Mobile Testing Challenges with Codeless Solution")))}m.isMDXComponent=!0}}]);