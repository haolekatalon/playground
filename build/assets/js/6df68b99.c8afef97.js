"use strict";(self.webpackChunkplayground=self.webpackChunkplayground||[]).push([[94192],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>m});var a=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)o=i[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)o=i[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(o),g=n,m=d["".concat(s,".").concat(g)]||d[g]||c[g]||i;return o?a.createElement(m,r(r({ref:t},u),{},{components:o})):a.createElement(m,r({ref:t},u))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,r=new Array(i);r[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:n,r[1]=l;for(var p=2;p<i;p++)r[p]=o[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,o)}g.displayName="MDXCreateElement"},74883:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=o(87462),n=(o(67294),o(3905));const i={id:"concept-f3e57190-d916-4247-8ffd-7bc85ed5d068",slug:"/plugins-and-add-ons/katalon-store/katalon-studio-plugins/debug-your-platform-plugin-using-eclipse-ide"},r="Debug your platform plugin using Eclipse IDE",l={unversionedId:"concept-f3e57190-d916-4247-8ffd-7bc85ed5d068",id:"concept-f3e57190-d916-4247-8ffd-7bc85ed5d068",title:"Debug your platform plugin using Eclipse IDE",description:"This tutorial will illustrate how to debug a platform plugin using Eclipse IDE via Java Remote Debugging feature.",source:"@site/docs/concept-f3e57190-d916-4247-8ffd-7bc85ed5d068.mdx",sourceDirName:".",slug:"/plugins-and-add-ons/katalon-store/katalon-studio-plugins/debug-your-platform-plugin-using-eclipse-ide",permalink:"/plugins-and-add-ons/katalon-store/katalon-studio-plugins/debug-your-platform-plugin-using-eclipse-ide",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concept-f3e57190-d916-4247-8ffd-7bc85ed5d068.mdx",tags:[],version:"current",frontMatter:{id:"concept-f3e57190-d916-4247-8ffd-7bc85ed5d068",slug:"/plugins-and-add-ons/katalon-store/katalon-studio-plugins/debug-your-platform-plugin-using-eclipse-ide"},sidebar:"tutorialSidebar",previous:{title:"How to resolve external dependencies for a plugin in Katalon Studio",permalink:"/plugins-and-add-ons/katalon-store/katalon-studio-plugins/how-to-resolve-external-dependencies-for-a-plugin-in-katalon-studio"},next:{title:"Develop a customized report plugin in Katalon Studio",permalink:"/plugins-and-add-ons/katalon-store/katalon-studio-plugins/develop-a-customized-report-plugin-in-katalon-studio"}},s={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Step 1: Start Katalon Studio with remote debugger mode",id:"step-1-start-katalon-studio-with-remote-debugger-mode",level:2},{value:"Step 2: Import your platform plugin to Eclipse IDE as a Maven project",id:"step-2-import-your-platform-plugin-to-eclipse-ide-as-a-maven-project",level:2},{value:"Step 3: Set a breakpoint",id:"step-3-set-a-breakpoint",level:2},{value:"Step 4: Create a Java Remote Application Debugger",id:"step-4-create-a-java-remote-application-debugger",level:2},{value:"Step 5: Configure the Java Remote Application Debugger",id:"step-5-configure-the-java-remote-application-debugger",level:2},{value:"Step 6: Import plugin to Katalon Studio and start debugging",id:"step-6-import-plugin-to-katalon-studio-and-start-debugging",level:2},{value:"Step 7: Disconnect and stop debugging",id:"step-7-disconnect-and-stop-debugging",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...o}=e;return(0,n.kt)(d,(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"debug-your-platform-plugin-using-eclipse-ide"},"Debug your platform plugin using Eclipse IDE"),(0,n.kt)("p",null,"This tutorial will illustrate how to debug a platform plugin using Eclipse IDE via ",(0,n.kt)("a",{parentName:"p",href:"https://help.eclipse.org/2019-03/topic/org.eclipse.jdt.doc.user/tasks/task-running_and_debugging.htm"},"Java Remote Debugging")," feature."),(0,n.kt)("h2",{id:"requirements"},"Requirements"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Java SDK 1.8"),(0,n.kt)("li",{parentName:"ol"},"Maven 3.3+"),(0,n.kt)("li",{parentName:"ol"},"Katalon Studio version 6.1.0 or later"),(0,n.kt)("li",{parentName:"ol"},"Eclipse IDE ","(","We used Eclipse 4.11 in this article",")")),(0,n.kt)("h2",{id:"step-1-start-katalon-studio-with-remote-debugger-mode"},"Step 1: Start Katalon Studio with remote debugger mode"),(0,n.kt)("p",null,"Start Katalon Studio via CLI using this command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"<katalon_installed_folder>/katalon -vmargs -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000\n\n")),(0,n.kt)("p",null,"The ",(0,n.kt)("code",null,"<","katalon","_","installed","_","folder",">")," is the absolute path to Katalon installed folder."),(0,n.kt)("p",null,"If you are using macOS, the ",(0,n.kt)("code",null,"<","katalon","_","installed","_","folder",">")," should be ",(0,n.kt)("code",null,"/Applications/Katalon Studio.app/Contents/MacOS"),"."),(0,n.kt)("p",null,"The ",(0,n.kt)("code",null,"address=8000")," is a local port number, JVM will allow a debugger to attach to Katalon Studio via this port. You can change to another port if needed."),(0,n.kt)("h2",{id:"step-2-import-your-platform-plugin-to-eclipse-ide-as-a-maven-project"},"Step 2: Import your platform plugin to Eclipse IDE as a Maven project"),(0,n.kt)("p",null,"In this example, we will use the last tutorial project: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/katalon-studio/katalon-studio-sample-plugin"},"katalon-studio-sample-plugin 1")," to debug."),(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/import-plugin-project-to-eclipse-ide.png",width:500}),(0,n.kt)("h2",{id:"step-3-set-a-breakpoint"},"Step 3: Set a breakpoint"),(0,n.kt)("p",null,"Open a Java file and set a breakpoint in the code. In this example, we set the breakpoint in the line of class ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/katalon-studio/katalon-studio-sample-plugin/blob/master/src/main/java/com/mycompany/plugin/MyPluginActivationListener.java"},"MyPluginActivationListener"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'System.out.println("Hello, my plugin is: " + plugin.getPluginId());\n\n')),(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/set-breakpoint.png",width:700}),(0,n.kt)("h2",{id:"step-4-create-a-java-remote-application-debugger"},"Step 4: Create a Java Remote Application Debugger"),(0,n.kt)("p",null,"Click on the arrow dropdown of Eclipse debug icon ",(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/debug-icon.png"}),", choose ",(0,n.kt)("code",null,"Debug Configuration")," item."),(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/debug-configurations.png",width:500}),(0,n.kt)("p",null,"Right-click on the ",(0,n.kt)("code",null,"Java Remote Application")," and choose ",(0,n.kt)("code",null,"New Configuration")," to add new Remote Debugger"),(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/new-configuration.png",width:600}),(0,n.kt)("h2",{id:"step-5-configure-the-java-remote-application-debugger"},"Step 5: Configure the Java Remote Application Debugger"),(0,n.kt)("code",null,"Browse")," to your platform plugin project at the text field under ",(0,n.kt)("code",null,"Project")," section.",(0,n.kt)("p",null,"Enter the port number you declared at step 1 to the ",(0,n.kt)("code",null,"Port:")," text field under ",(0,n.kt)("code",null,"Connection Properties"),"section."),(0,n.kt)("p",null,"Click ",(0,n.kt)("code",null,"Debug")," to finish setup."),(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/new-remote-debugger.png",width:600}),(0,n.kt)("p",null,"If your setup is correct, there is the connect icon which will be displayed on Eclipse toolbar. ",(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/stop-debug-icon.png"})),(0,n.kt)("h2",{id:"step-6-import-plugin-to-katalon-studio-and-start-debugging"},"Step 6: Import plugin to Katalon Studio and start debugging"),(0,n.kt)("p",null,"Import your plugin and do your expected actions to make the breakpoint you placed at step 2 will be hit."),(0,n.kt)("p",null,"In this sample, the breakpoint will hit immediately after the plugin successfully installed."),(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/breakpoint-hit.png"}),(0,n.kt)("p",null,"You now can debug your platform plugin project as a normal Java project."),(0,n.kt)("h2",{id:"step-7-disconnect-and-stop-debugging"},"Step 7: Disconnect and stop debugging"),(0,n.kt)("p",null,"Press the ",(0,n.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-store/docs/publisher/stop-debug-icon.png"})," icon to disconnect and stop your debugging session."))}c.isMDXComponent=!0}}]);