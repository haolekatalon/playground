"use strict";(self.webpackChunkplayground=self.webpackChunkplayground||[]).push([[60056],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=c(a),m=s,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=a.length,o=new Array(i);o[0]=m;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[u]="string"==typeof e?e:s,o[1]=r;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},80539:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var n=a(87462),s=(a(67294),a(3905));const i={id:"concept-442b167b-f3ed-4208-b790-28ff7d6e5985",slug:"/create-tests/test-objects/api-test-objects/schema-compliance-testing-in-katalon-studio"},o="Schema compliance testing in Katalon Studio",r={unversionedId:"concept-442b167b-f3ed-4208-b790-28ff7d6e5985",id:"concept-442b167b-f3ed-4208-b790-28ff7d6e5985",title:"Schema compliance testing in Katalon Studio",description:"Schema compliance testing is to assert whether a request or a response follows the associated schema definition. Validating API requests and responses against schemas is an efficient and effective way to make sure that APIs are working as expected.",source:"@site/docs/concept-442b167b-f3ed-4208-b790-28ff7d6e5985.mdx",sourceDirName:".",slug:"/create-tests/test-objects/api-test-objects/schema-compliance-testing-in-katalon-studio",permalink:"/create-tests/test-objects/api-test-objects/schema-compliance-testing-in-katalon-studio",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concept-442b167b-f3ed-4208-b790-28ff7d6e5985.mdx",tags:[],version:"current",frontMatter:{id:"concept-442b167b-f3ed-4208-b790-28ff7d6e5985",slug:"/create-tests/test-objects/api-test-objects/schema-compliance-testing-in-katalon-studio"},sidebar:"tutorialSidebar",previous:{title:"Create Web Service Object in Katalon Studio Script Mode",permalink:"/create-tests/test-objects/api-test-objects/create-web-service-object-in-katalon-studio-script-mode"},next:{title:"Verification Snippets in Katalon Studio",permalink:"/create-tests/test-objects/api-test-objects/verification-snippets-in-katalon-studio"}},l={},c=[{value:"Requirements",id:"requirements",level:2},{value:"What is a schema?",id:"what-is-a-schema",level:2},{value:"Validate against a schema in the web service request",id:"validate-against-a-schema-in-the-web-service-request",level:2},{value:"Validate against schemas in a test case",id:"validate-against-schemas-in-a-test-case",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...a}=e;return(0,s.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"schema-compliance-testing-in-katalon-studio"},"Schema compliance testing in Katalon Studio"),(0,s.kt)("p",null,"Schema compliance testing is to assert whether a request or a response follows the associated schema definition. Validating API requests and responses against schemas is an efficient and effective way to make sure that APIs are working as expected."),(0,s.kt)("p",null,"This document shows you how to validate a response body, request body, or string against schemas for API testing in Katalon Studio. You can find a sample project for this feature on our GitHub repository: ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/katalon-studio-samples/studio-schema-validation-example"},"Validate against schemas sample project"),"."),(0,s.kt)("p",null,"With this feature, you can:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Use JSON schema to validate RESTful request and response body content."),(0,s.kt)("li",{parentName:"ul"},"Use XML schema to validate RESTful and SOAP request and response body content."),(0,s.kt)("li",{parentName:"ul"},"Use GraphQL schema to validate GraphQL request body content. To learn more about GraphQL, you can refer to this document: ",(0,s.kt)("a",{parentName:"li",href:"/create-tests/test-objects/api-test-objects/graphql-in-katalon-studio"},"GraphQL"),".")),(0,s.kt)("h2",{id:"requirements"},"Requirements"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Katalon Studio version 8.4.0 onwards.")),(0,s.kt)("h2",{id:"what-is-a-schema"},"What is a schema?"),(0,s.kt)("p",null,"A schema concisely describes the structure of other instances, which can be used to require that an instance satisfies a certain number of criteria. The document being validated or described is called the instance, and the document containing the description is called the schema. A schema validation asserts constraints on the structure of the instance data. Recently, there has been a lot of interest in using schemas, such as a JSON or XML schema, as a basis for contract testing. You can learn more about the reason why we need to maintain the schema during the testing process in this document: ",(0,s.kt)("a",{parentName:"p",href:"/create-tests/introduction-to-test-creation/introduction-to-api-testing-in-katalon-studio#"},"Update the Schema of API testing"),"."),(0,s.kt)("p",null,"The infographic below demonstrates the role of JSON/XML schema in API testing:"),(0,s.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/schema-validation/Validate-Format.png",width:500,alt:"Infographic"}),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Infographic based on the Automation Step By Step course: What is JSON Schema")),(0,s.kt)("p",null,"Learn more from the JSON Schema documentation: ",(0,s.kt)("a",{parentName:"p",href:"https://json-schema.org/understanding-json-schema/about.html#about"},"What is a schema?")),(0,s.kt)("h2",{id:"validate-against-a-schema-in-the-web-service-request"},"Validate against a schema in the web service request"),(0,s.kt)("p",null,"This section walks you through adding validation to a web service request and viewing results."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("ul",{parentName:"admonition"},(0,s.kt)("li",{parentName:"ul"},"Make sure that you declare the JSON schema used in that URL or file. For more information, you can refer to JSON schema document: ",(0,s.kt)("a",{parentName:"li",href:"https://json-schema.org/understanding-json-schema/reference/schema.html#schema"},"$schema"),"."))),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"In an API tests project, open or create a new ",(0,s.kt)("strong",{parentName:"p"},"Web Service Request"),". To create a new ",(0,s.kt)("strong",{parentName:"p"},"Web Service Request"),", go to ",(0,s.kt)("strong",{parentName:"p"},"Test Explorer")," ",">"," ",(0,s.kt)("strong",{parentName:"p"},"Object Repository"),". Right-click and choose ",(0,s.kt)("strong",{parentName:"p"},"New")," ",">"," ",(0,s.kt)("strong",{parentName:"p"},"Web Service Request"),"."),(0,s.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/schema-validation/new-web-service-request.png",width:500,alt:"new web service request"})),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"In the object editor view, switch to the ",(0,s.kt)("strong",{parentName:"p"},"Validation")," tab."),(0,s.kt)("img",{src:"/doc_images/Documents/Create_tests/Test_Objects/API_Test_Object/schema-validation-for-api-testing/ks-840-validation-tab.png",alt:"validation tab"})),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"To add new validation, click on ",(0,s.kt)("strong",{parentName:"p"},"Add")," and input the below information:"),(0,s.kt)("table",null,(0,s.kt)("tr",null,(0,s.kt)("th",null,"Option"),(0,s.kt)("th",null,"Description")),(0,s.kt)("tbody",null,(0,s.kt)("tr",null,(0,s.kt)("td",null,"Name"),(0,s.kt)("td",null,"Name of the validation.")),(0,s.kt)("tr",null,(0,s.kt)("td",null,"Target"),(0,s.kt)("td",null,(0,s.kt)("ul",null,(0,s.kt)("li",null,"Response: check the response body."),(0,s.kt)("li",null,"Request: check the request body.")))),(0,s.kt)("tr",null,(0,s.kt)("td",null,"Schema Type"),(0,s.kt)("td",null,(0,s.kt)("ul",null,(0,s.kt)("li",null,"JSON"),(0,s.kt)("li",null,"XML"),(0,s.kt)("li",null,(0,s.kt)("p",null,"GraphQL")),(0,s.kt)("li",null,"Auto Detect")))),(0,s.kt)("tr",null,(0,s.kt)("td",null,"Input Type"),(0,s.kt)("td",null,(0,s.kt)("ul",null,(0,s.kt)("li",null,"URL"),(0,s.kt)("li",null,"File"),(0,s.kt)("li",null,"Auto detect")))),(0,s.kt)("tr",null,(0,s.kt)("td",null,"Location/Value"),(0,s.kt)("td",null,"Input an URL to a schema, or file path to a schema. If the ",(0,s.kt)("strong",null,"Input Type")," is a file, you can click on ",(0,s.kt)("strong",null,"Browse")," on the ",(0,s.kt)("strong",null,"Location/Value")," cell to browse to the schema file location.")),(0,s.kt)("tr",null,(0,s.kt)("td",null,"Validate"),(0,s.kt)("td",null,"Select which schemas to validate against.")),"    "))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Validate against the schema:"),(0,s.kt)("p",{parentName:"li"},"When you are done adding validation, click ",(0,s.kt)("strong",{parentName:"p"},"Save"),". Then, click on the dropdown menu of the ",(0,s.kt)("strong",{parentName:"p"},"Test Request")," and choose ",(0,s.kt)("strong",{parentName:"p"},"Test Request And Verify"),"."),(0,s.kt)("img",{src:"https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/schema-validation/test-request-and-verify.png",width:250,alt:"test request and verify"})),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"View validation results:"),(0,s.kt)("p",{parentName:"li"},"In the ",(0,s.kt)("strong",{parentName:"p"},"Response")," section, switch to the ",(0,s.kt)("strong",{parentName:"p"},"Validation Log")," tab. The validation results appear:"),(0,s.kt)("img",{src:"/doc_images/Documents/Create_tests/Test_Objects/API_Test_Object/schema-validation-for-api-testing/ks-840-validation-log.png",alt:"validation log"}),(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Result"),":"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"PASSED"),": All the requests/ responses passed the validation."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"FAILED"),": At least one of the request/ response failed the validation.\nClick on each line of the ",(0,s.kt)("strong",{parentName:"li"},"Result")," table to view ",(0,s.kt)("strong",{parentName:"li"},"Problem details"),". The ",(0,s.kt)("strong",{parentName:"li"},"Problem details")," section appears with a list of issues. For example: ",(0,s.kt)("code",null,"$","[0]",".password: string found, integer expected"),", or ",(0,s.kt)("code",null,"$","[0]",".username: string found, integer expected"),".")))),(0,s.kt)("p",null,"You have successfully validated requests/ responses against schemas using Katalon Studio."),(0,s.kt)("h2",{id:"validate-against-schemas-in-a-test-case"},"Validate against schemas in a test case"),(0,s.kt)("p",null,"To validate against schemas in a specific test case, you can add these keywords directly:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-validate-json-string-against-a-schema"},"[","WS","]"," Validate a JSON string against a schema")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-validate-an-xml-string-against-a-schema"},"[","WS","]"," Validate an XML string against a schema")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-validate-graphql-request-against-a-graphql-schema"},"[","WS","]"," Validate GraphQL request against a GraphQL schema"))),(0,s.kt)("img",{src:"/doc_images/Documents/Create_tests/Test_Objects/API_Test_Object/schema-validation-for-api-testing/ks-840-validate-xml-in-tc.png",alt:"validate XML schema in a test case"}),(0,s.kt)("p",null,"View the test case in script view:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'res = WS.sendRequest(findTestObject(\'XML\'))\n\nString xml = \'\'\'<?xml version="1.0" encoding="utf-8"?>\n<List>\n    <item>\n        <id>3</id>\n        <username>James Johnson</username>\n        <password>789</password>\n        <gender>FEMALE</gender>\n        <age>75</age>\n        <avatar/>\n    </item>\n</List>\'\'\'\n\nString xmlFile = FileUtils.readFileToString(new File("example/xml/person.xml"), "utf-16");\n\nWS.validateXmlAgainstSchema(res, "example/xml/person.xsd");\nWS.validateXmlAgainstSchema(xml, "example/xml/person.xsd");\nWS.validateXmlAgainstSchema(xmlFile, "http://localhost:8080/api/users/xsd", FailureHandling.STOP_ON_FAILURE);\n\n')),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("ul",{parentName:"admonition"},(0,s.kt)("li",{parentName:"ul"},"You can also add the ",(0,s.kt)("code",null,"sendRequestAndVerify")," keyword as a test step. This action also sends the current request and executes verification snippets. Learn more about this keyword at our javadoc ",(0,s.kt)("a",{parentName:"li",href:"https://api-docs.katalon.com/com/kms/katalon/core/webservice/keyword/builtin/SendRequestAndVerifyKeyword.html"},"Send Request And Verify")," and ",(0,s.kt)("a",{parentName:"li",href:"/create-tests/test-objects/api-test-objects/verification-snippets-in-katalon-studio"},"Verification Snippets"),"."))),(0,s.kt)("p",null,"When you execute your test, in the ",(0,s.kt)("strong",{parentName:"p"},"Log Viewer"),", you can see the result of those validation steps and a list of issues ","(","if any",")","."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Validation passed:"),(0,s.kt)("img",{src:"/doc_images/Documents/Create_tests/Test_Objects/API_Test_Object/schema-validation-for-api-testing/ks-840-validation-passed.png",alt:"validation passed"})),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Validation failed:"),(0,s.kt)("img",{src:"/doc_images/Documents/Create_tests/Test_Objects/API_Test_Object/schema-validation-for-api-testing/ks-840-validation-failed.png",alt:"validation failed"})),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Send request failed with root causes:"),(0,s.kt)("img",{src:"/doc_images/Documents/Create_tests/Test_Objects/API_Test_Object/schema-validation-for-api-testing/ks-840-send-request-failed.png",alt:"send request failed with root cause"}))))}p.isMDXComponent=!0}}]);