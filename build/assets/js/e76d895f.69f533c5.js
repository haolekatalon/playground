"use strict";(self.webpackChunkplayground=self.webpackChunkplayground||[]).push([[39266],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,k=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(k,s(s({ref:t},u),{},{components:n})):r.createElement(k,s({ref:t},u))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:o,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},92832:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={id:"concept-fa9ee095-9dc3-4dd4-9481-ca03935b3632",slug:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-verify-elements-count"},s="[WS] Verify Elements Count",l={unversionedId:"concept-fa9ee095-9dc3-4dd4-9481-ca03935b3632",id:"concept-fa9ee095-9dc3-4dd4-9481-ca03935b3632",title:"\\[WS\\] Verify Elements Count",description:"Description",source:"@site/docs/concept-fa9ee095-9dc3-4dd4-9481-ca03935b3632.mdx",sourceDirName:".",slug:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-verify-elements-count",permalink:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-verify-elements-count",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concept-fa9ee095-9dc3-4dd4-9481-ca03935b3632.mdx",tags:[],version:"current",frontMatter:{id:"concept-fa9ee095-9dc3-4dd4-9481-ca03935b3632",slug:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-verify-elements-count"},sidebar:"tutorialSidebar",previous:{title:"\\[WS\\] Verify Element Property Value",permalink:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-verify-element-property-value"},next:{title:"\\[WS\\] Verify Element Text",permalink:"/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-verify-element-text"}},i={},c=[{value:"Description",id:"description",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ws-verify-elements-count"},"[","WS","]"," Verify Elements Count"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Verify the number of expected elements ","(","JSON/XML",")"," in the response ","(","output",")"," of a web service call."),(0,o.kt)("p",null,"Keyword name: ",(0,o.kt)("code",null,"WS.verifyElementsCount")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("th",null,"Param"),(0,o.kt)("th",null,"Param Type"),(0,o.kt)("th",null,"Mandatory"),(0,o.kt)("th",null,"Description")),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"response"),(0,o.kt)("td",null,"ResponseObject"),(0,o.kt)("td",null,"Required"),(0,o.kt)("td",null,"The object that represents an HTTP response.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"locator"),(0,o.kt)("td",null,"String"),(0,o.kt)("td",null,"Required"),(0,o.kt)("td",null,"An expression Katalon will use to go through and look for the expected element(s). You can refer to this guide: ",(0,o.kt)("a",{href:"/create-tests/test-objects/api-test-objects/handle-response-messages-in-katalon-studio"},"Handle Web Service Response object"),". The syntax for locator is GPath. To learn more about GPath, see this ",(0,o.kt)("a",{href:"http://groovy-lang.org/processing-xml.html"},"guide"),".")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"count"),(0,o.kt)("td",null,"int"),(0,o.kt)("td",null,"Required"),(0,o.kt)("td",null,"The expected number of element(s) should appear in the responded data (usually JSON/XML)")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"flowControl"),(0,o.kt)("td",null,"FailureHandling"),(0,o.kt)("td",null,"Optional"),(0,o.kt)("td",null,"Specify ",(0,o.kt)("a",{href:"/maintain/configure-failure-handling-settings-in-katalon-studio"},"failure handling")," schema to determine whether the execution should be allowed to continue or stop.")))),(0,o.kt)("h2",{id:"returns"},"Returns"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"true"),", if your expectation is met, otherwise ",(0,o.kt)("code",null,"false"),".")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"You want to verify number of expected elements in the response is 3"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase\nimport static com.kms.katalon.core.testdata.TestDataFactory.findTestData\nimport static com.kms.katalon.core.testobject.ObjectRepository.findTestObject\nimport internal.GlobalVariable as GlobalVariable\nimport com.kms.katalon.core.testobject.ConditionType as ConditionType\nimport com.kms.katalon.core.testobject.RequestObject as RequestObject\nimport com.kms.katalon.core.testobject.TestObjectProperty as TestObjectProperty\nimport com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WebAPI\nimport com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI\nimport com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile\nimport com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS\nimport static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint\nimport com.kms.katalon.core.model.FailureHandling as FailureHandling\nimport com.kms.katalon.core.testcase.TestCase as TestCase\nimport com.kms.katalon.core.testdata.TestData as TestData\nimport com.kms.katalon.core.testobject.TestObject as TestObject\nimport com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint\n\n'Send a SOAP request and returns its response'\ndef response = WS.sendRequest(findTestObject('REST_EmployeeInfo'))\n\n'Verify number of expected employee contact records'\nWS.verifyElementsCount(response, 'employee.contacts', 3)\n\n")))}p.isMDXComponent=!0}}]);