"use strict";(self.webpackChunkplayground=self.webpackChunkplayground||[]).push([[91261],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),m=n,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return a?r.createElement(k,i(i({ref:t},c),{},{components:a})):r.createElement(k,i({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},11081:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=a(87462),n=(a(67294),a(3905));const o={author:"Hao Le <hao.le@katalon.com>",id:"concept-62d684d9-22b4-4296-a02d-343e63096b55",slug:"/execute/ci-cd-integrations/harness-integration"},i="Harness Integration",s={unversionedId:"concept-62d684d9-22b4-4296-a02d-343e63096b55",id:"concept-62d684d9-22b4-4296-a02d-343e63096b55",title:"Harness Integration",description:"Harness is a CI/CD service platform that provides a simple and secure way for engineering and DevOps teams to release applications faster, safer, and more secure. Harness automates the entire CI/CD process, which helps build, test, and deploy improved features more quickly. To learn more about key concepts of Harness, you can refer to this Harness document: Harness Key Concepts.",source:"@site/docs/concept-62d684d9-22b4-4296-a02d-343e63096b55.mdx",sourceDirName:".",slug:"/execute/ci-cd-integrations/harness-integration",permalink:"/execute/ci-cd-integrations/harness-integration",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concept-62d684d9-22b4-4296-a02d-343e63096b55.mdx",tags:[],version:"current",frontMatter:{author:"Hao Le <hao.le@katalon.com>",id:"concept-62d684d9-22b4-4296-a02d-343e63096b55",slug:"/execute/ci-cd-integrations/harness-integration"},sidebar:"tutorialSidebar",previous:{title:"Google Cloud Build",permalink:"/execute/ci-cd-integrations/google-cloud-build"},next:{title:"Jenkins Integration Overview",permalink:"/execute/ci-cd-integrations/jenkins-integration/jenkins-integration-overview"}},l={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Set up your Harness Account",id:"set-up-your-harness-account",level:2},{value:"Set up a Harness Application",id:"set-up-a-harness-application",level:2},{value:"Add a Harness Application",id:"add-a-harness-application",level:3},{value:"Add a Service to the Application",id:"add-a-service-to-the-application",level:3},{value:"Add an Environment to the Application",id:"add-an-environment-to-the-application",level:3},{value:"Create a Harness Workflow",id:"create-a-harness-workflow",level:2},{value:"Add a Workflow",id:"add-a-workflow",level:3},{value:"Add a Workflow Variable",id:"add-a-workflow-variable",level:3},{value:"Configure the Workflow",id:"configure-the-workflow",level:3},{value:"Deploy the Workflow",id:"deploy-the-workflow",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"harness-integration"},"Harness Integration"),(0,n.kt)("p",null,"Harness is a CI/CD service platform that provides a simple and secure way for engineering and DevOps teams to release applications faster, safer, and more secure. Harness automates the entire CI/CD process, which helps build, test, and deploy improved features more quickly. To learn more about key concepts of Harness, you can refer to this Harness document: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.harness.io/article/4o7oqwih6h-harness-key-concepts"},"Harness Key Concepts"),"."),(0,n.kt)("p",null,"If you are an automation tester and using Harness CI, you might want to integrate Katalon Runtime Engine ","(","KRE",")"," and create a CI/CI pipeline to execute your tests."),(0,n.kt)("p",null,"This tutorial shows you how to set up a Workflow with Harness to build your Katalon tests with the Katalon Docker image, which contains KRE, and execute the tests in a Kubernetes cluster farm."),(0,n.kt)("p",null,"The integration in this tutorial is performed on Harness FirstGen."),(0,n.kt)("h2",{id:"requirements"},"Requirements"),(0,n.kt)("p",null,"With the proposed scenario, you need to first configure the following components to work with Harness:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"An active Katalon Runtime Engine license.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"A Harness account.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Docker is installed and running.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Kubernetes is installed and running.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Kubernetes manifest files to configure the build for your Katalon Docker image. You can refer to the sample manifest files in our GitHub repository: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/katalon-studio-samples/ci-samples/tree/master/.harness"},"Sample manifests"),"."))),(0,n.kt)("h2",{id:"set-up-your-harness-account"},"Set up your Harness Account"),(0,n.kt)("p",null,"Before creating a Workflow in Harness, you need to set up your Account."),(0,n.kt)("p",null,"Follow these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Set up a ",(0,n.kt)("strong",{parentName:"p"},"Harness Delegate"),"."),(0,n.kt)("p",{parentName:"li"},"For detailed instructions, see Harness document: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.harness.io/article/h9tkwmkrm7-delegate-installation"},"Harness Delegate Installation"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Set up a ",(0,n.kt)("strong",{parentName:"p"},"Cloud Provider"),"."),(0,n.kt)("p",{parentName:"li"},"For detailed instructions on adding a Kubernetes Cloud Provider, see Harness document: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.harness.io/article/l68rujg6mp-add-kubernetes-cluster-cloud-provider"},"Add Kubernetes Cluster Cloud Provider"),"."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/Harness-Cloud-Provider.png",width:600,alt:"Harness Kubernetes Cloud Provider"})),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add an ",(0,n.kt)("strong",{parentName:"p"},"Artifact Server"),"."),(0,n.kt)("p",{parentName:"li"},"To add a Docker Registry Artifact Server for the Katalon Docker image, see Harness document: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.harness.io/article/tdj2ghkqb0-add-docker-registry-artifact-servers"},"Add Docker Registry Artifact Server"),"."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/Harness-Docker-Registry-Artifact-Server.png",width:600,alt:"Harness Docker Registry Artifact Server"})),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add a ",(0,n.kt)("strong",{parentName:"p"},"Source Repo Provider"),"."),(0,n.kt)("p",{parentName:"li"},"To add a GitHub Source Repo Provider, see Harness document: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.harness.io/article/sip9rr6ogy-add-github-repo"},"Add a GitHub Repo"),"."),(0,n.kt)("p",{parentName:"li"},"Here we add a GitHub Source Repo Provider with the GitHub repository URL: ",(0,n.kt)("code",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/katalon-studio-samples/ci-samples"},"https://github.com/katalon-studio-samples/ci-samples")),". You can fork this repository and provide your own GitHub Personal Access Token when you configure the Source Repo Provider."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/Harness-Source-Repo-Provider.png",width:600,alt:"Harness GitHub Source Repo Provider"}))),(0,n.kt)("h2",{id:"set-up-a-harness-application"},"Set up a Harness Application"),(0,n.kt)("p",null,"A Harness Application represents a group of microservices, their deployment pipelines, and all the building blocks for those pipelines. Harness represents your microservice using a logical group of one or more entities: Services, Environments, Workflows, Pipelines, Triggers, and Infrastructure Provisioners."),(0,n.kt)("p",null,"Here we set up an Application with the necessary configurations to create Workflow for our pipeline."),(0,n.kt)("h3",{id:"add-a-harness-application"},"Add a Harness Application"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"To add a Harness Application, you can refer to this Harness document: ",(0,n.kt)("a",{parentName:"li",href:"https://docs.harness.io/article/bucothemly-application-configuration#step_1_set_up_the_application"},"Set up Harness Application"),".")),(0,n.kt)("h3",{id:"add-a-service-to-the-application"},"Add a Service to the Application"),(0,n.kt)("p",null,"Services represent your microservices/apps. You define where the artifacts for those microservices come from, and the container specs, configuration variables, and files for those microservices."),(0,n.kt)("p",null,"Here we add a Service and configure it with the defined Artifact Server and manifest files."),(0,n.kt)("p",null,"Follow these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In your Application, click ",(0,n.kt)("strong",{parentName:"p"},"Service")," ",">"," ",(0,n.kt)("strong",{parentName:"p"},"Add Service"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In the opened ",(0,n.kt)("strong",{parentName:"p"},"Add Service")," dialog, specify the name and deployment type."),(0,n.kt)("p",{parentName:"li"},"As we use a Kubernetes Cloud Provider, we specify the Kubernetes Deployment Type. ",(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/Harness-add-a-service.png",width:500,alt:"Add Service dialog"}))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Click ",(0,n.kt)("strong",{parentName:"p"},"Submit"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add an Artifact Source. In the ",(0,n.kt)("strong",{parentName:"p"},"Service Overview")," section of the new Service, click ",(0,n.kt)("strong",{parentName:"p"},"Add Artifact Source")," ",">"," ",(0,n.kt)("strong",{parentName:"p"},"Docker Registry"),"."),(0,n.kt)("p",{parentName:"li"},"Here we specify the Artifact Source with our Docker Registry Artifact Server and the name of the Katalon Docker image ","(",(0,n.kt)("code",null,"katalonstudio/katalon"),")","."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-service-add-artifact-source.png",width:500,alt:"Artifact Source - Docker Registry dialog"})),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Link manifest files to the Service. In the ",(0,n.kt)("strong",{parentName:"p"},"Manifests")," section of the Service, click on the ",(0,n.kt)("em",{parentName:"p"},"option")," icon ","(","top-right corner",")"," and select ",(0,n.kt)("strong",{parentName:"p"},"Link Remote Manifests"),"."),(0,n.kt)("p",{parentName:"li"},"Here we specify the Source Repository with our GitHub Source Repo Provider and the branch, folder path that contains the manifest files ","(",(0,n.kt)("code",null,".harness"),")","."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-link-remote-manifests.png",width:500,alt:"Remote Manifests dialog"})),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Defined a variable for Katalon API Key. In the ",(0,n.kt)("strong",{parentName:"p"},"Configuration")," / ",(0,n.kt)("strong",{parentName:"p"},"Config Variables"),", click ",(0,n.kt)("strong",{parentName:"p"},"Add Variable")," and define a variable representing the Katalon API Key."),(0,n.kt)("p",{parentName:"li"},"In the sample manifest files, we create a variable named ",(0,n.kt)("code",null,"apiKey")," to represent the Katalon API Key. Therefore, in the Service we need to define the variable and provide the value ","(","our Katalon API Key",")",".",(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-manifest-values-file.png",width:500,alt:"Sample manifest files with apiKey variable"})),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-config-variable-blurred.png",width:500,alt:"Config Variable dialog"}),(0,n.kt)("p",{parentName:"li"},"To get your Katalon API Key, see: ",(0,n.kt)("a",{parentName:"p",href:"/administer/settings/katalon-api-key-in-katalon-testops#"},"Generate a Katalon API Key")))),(0,n.kt)("p",null,"The Service is then configured with an Artifact Source, Kubernetes manifests stored in our GitHub repository, and a variable representing the Katalon API Key."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-service-configured-blurred.png",width:700,alt:"Harness Service configured"}),(0,n.kt)("h3",{id:"add-an-environment-to-the-application"},"Add an Environment to the Application"),(0,n.kt)("p",null,"You define your target deployment infrastructure using a Harness Environment. Environments represent your deployment infrastructures, such as Dev, QA, Stage, Production, etc."),(0,n.kt)("p",null,"In our case, we add an Environment that uses the Kubernetes Cloud Provider."),(0,n.kt)("p",null,"Follow these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In your Application, click ",(0,n.kt)("strong",{parentName:"p"},"Environments")," ",">"," ",(0,n.kt)("strong",{parentName:"p"},"Add Environment")," and create a new Environment.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In the created Environment, click ",(0,n.kt)("strong",{parentName:"p"},"Add Infrastructure Definition")," and specify the properties for your infrastructure."),(0,n.kt)("p",{parentName:"li"},"As we want to execute our tests in a Kubernetes cluster, which is defined in the Kubernetes Cloud Provider, we specify the Infrastructure as follows."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-infrastructure-definition.png",width:600,alt:"Harness Infrastructure Definition"})),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Click ",(0,n.kt)("strong",{parentName:"p"},"Submit"),"."))),(0,n.kt)("h2",{id:"create-a-harness-workflow"},"Create a Harness Workflow"),(0,n.kt)("p",null,"Workflows define the deployment orchestration steps, including how a Service is deployed, verified, rolled back, and more."),(0,n.kt)("p",null,"Here we create a Workflow that includes steps to build, execute our tests, and finally clean up the deployed workload."),(0,n.kt)("h3",{id:"add-a-workflow"},"Add a Workflow"),(0,n.kt)("p",null,"To add a Workflow, follow these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In your Application, click ",(0,n.kt)("strong",{parentName:"p"},"Workflows")," ",">"," ",(0,n.kt)("strong",{parentName:"p"},"Add Workflow"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In the opened dialog, specify the properties for your Workflow."),(0,n.kt)("p",{parentName:"li"},"Here we create a Rolling Deployment with our defined Environment, Service, and Infrastructure."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/Harness-add-workflow.png",width:500,alt:"Harness Workflow dialog"})),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Click ",(0,n.kt)("strong",{parentName:"p"},"Submit"),"."))),(0,n.kt)("h3",{id:"add-a-workflow-variable"},"Add a Workflow Variable"),(0,n.kt)("p",null,"In the sample manifest files, we create a Job named ",(0,n.kt)("code",null,"test"),", so we need to add a Workflow Variable to help Harness Workflow identify the Job that needs executing."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-manifest-values-file.png",width:600,alt:"Harness manifest file"}),(0,n.kt)("p",null,"To add a Workflow Variable, follow these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Open the created Workflow and select ",(0,n.kt)("strong",{parentName:"p"},"Workflow Variables"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In the opened dialog, define a variable with type ",(0,n.kt)("code",null,"text")," and provide the default value ","(","the Job name",")","."),(0,n.kt)("p",{parentName:"li"},"In our case, the value is ",(0,n.kt)("code",null,"test"),"."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-workflow-variable.png",width:600,alt:"Harness Workflow Variables dialog"}))),(0,n.kt)("h3",{id:"configure-the-workflow"},"Configure the Workflow"),(0,n.kt)("p",null,"After setting up the Workflow Variable, we configure the Workflow to deploy the test build with the included Kubernetes manifests."),(0,n.kt)("p",null,"Follow these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In the ",(0,n.kt)("strong",{parentName:"p"},"Deploy")," stage of the Workflow, add an Apply step."),(0,n.kt)("p",{parentName:"li"},"This step applies our Kubernetes manifest file ","(",(0,n.kt)("code",null,"test.yaml"),")"," to build and execute our tests."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-workflow-add-apply.png",width:500,alt:"Harness Apply step"})),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"In the ",(0,n.kt)("strong",{parentName:"p"},"Wrap Up")," stage of the Workflow, add a Delete step."),(0,n.kt)("p",{parentName:"li"},"The Delete step helps clean up the workload deployed by the Deploy stage."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-delete-step.png",width:500,alt:"Harness Delete step"})),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add a Rollback step. In the ",(0,n.kt)("strong",{parentName:"p"},"Rollback Steps")," / ",(0,n.kt)("strong",{parentName:"p"},"Deploy")," stage, add a Delete step as in ",(0,n.kt)("strong",{parentName:"p"},"Wrap Up")," stage."),(0,n.kt)("p",{parentName:"li"},"The Rollback steps initiate a rollback of your most-recent successful deployment."))),(0,n.kt)("p",null,"Your Workflow is now configured with an Apply step, a Delete step, and Rollback steps."),(0,n.kt)("img",{src:"/doc_images/Documents/Execute/CICD_Integrations/harness-integration/Images/harness-workflow-configured.png",width:600,alt:"Harness Workflow configured"}),(0,n.kt)("h3",{id:"deploy-the-workflow"},"Deploy the Workflow"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"})))}u.isMDXComponent=!0}}]);