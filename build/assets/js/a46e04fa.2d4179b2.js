"use strict";(self.webpackChunkplayground=self.webpackChunkplayground||[]).push([[2647],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,m=u["".concat(p,".").concat(d)]||u[d]||k[d]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},86392:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={id:"concept-d4ad4bf6-5f11-402b-b736-1110c5b32bbe",slug:"/create-tests/keywords/keyword-description-in-katalon-studio/visual-based-web-testing-keywords/webui-take-screenshot-as-checkpoint"},i="[WebUI] Take Screenshot As Checkpoint",s={unversionedId:"concept-d4ad4bf6-5f11-402b-b736-1110c5b32bbe",id:"concept-d4ad4bf6-5f11-402b-b736-1110c5b32bbe",title:"\\[WebUI\\] Take Screenshot As Checkpoint",description:"-   From version 7.7.0, this keyword is available.",source:"@site/docs/concept-d4ad4bf6-5f11-402b-b736-1110c5b32bbe.mdx",sourceDirName:".",slug:"/create-tests/keywords/keyword-description-in-katalon-studio/visual-based-web-testing-keywords/webui-take-screenshot-as-checkpoint",permalink:"/create-tests/keywords/keyword-description-in-katalon-studio/visual-based-web-testing-keywords/webui-take-screenshot-as-checkpoint",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concept-d4ad4bf6-5f11-402b-b736-1110c5b32bbe.mdx",tags:[],version:"current",frontMatter:{id:"concept-d4ad4bf6-5f11-402b-b736-1110c5b32bbe",slug:"/create-tests/keywords/keyword-description-in-katalon-studio/visual-based-web-testing-keywords/webui-take-screenshot-as-checkpoint"},sidebar:"tutorialSidebar",previous:{title:"\\[WebUI\\] Take Full Page Screenshot As Checkpoint",permalink:"/create-tests/keywords/keyword-description-in-katalon-studio/visual-based-web-testing-keywords/webui-take-full-page-screenshot-as-checkpoint"},next:{title:"\\[Mobile\\] Close Application",permalink:"/create-tests/keywords/keyword-description-in-katalon-studio/mobile-keywords/mobile-close-application"}},p={},l=[{value:"takeScreenshotAsCheckpoint",id:"takescreenshotascheckpoint",level:2}],c={toc:l},u="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"webui-take-screenshot-as-checkpoint"},"[","WebUI","]"," Take Screenshot As Checkpoint"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"From version 7.7.0, this keyword is available."))),(0,r.kt)("h2",{id:"takescreenshotascheckpoint"},"takeScreenshotAsCheckpoint"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Description"),": Take a screenshot of the current viewport to send to TestOps Vision. The captured image will be saved in '.png' format and stored in the 'keyes' folder inn the report folder.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Keyword name"),": takeScreenshotAsCheckpoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Keyword syntax"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"WebUI.takeScreenshotAsCheckpoint(checkpointName, flowControl)\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Name: checkpointName"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description: A String that represents the name of the image on TestOps Vision. On local machine, this name will be appended with TestOps Vision prefix","(","'keyes-'",")","."),(0,r.kt)("li",{parentName:"ul"},"Parameter Type: String"),(0,r.kt)("li",{parentName:"ul"},"Mandatory: Required"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Name: flowControl"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description: Specify ",(0,r.kt)("a",{parentName:"li",href:"/maintain/configure-failure-handling-settings-in-katalon-studio"},"failure handling")," schema to determine whether the execution should be allowed to continue or stop."),(0,r.kt)("li",{parentName:"ul"},"Parameter Type: FailureHandling"),(0,r.kt)("li",{parentName:"ul"},"Mandatory: Optional"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Examples"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You want to take a screenshot as checkpoint named 'current","_","viewport' for TestOps Vision and use default ",(0,r.kt)("a",{parentName:"p",href:"/maintain/configure-failure-handling-settings-in-katalon-studio"},"failure handling"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"WebUI.takeScreenshotAsCheckpoint('current_viewport')\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You want to take a screenshot as checkpoint named 'full","_","view' for TestOps Vision, and need the test to keep running regardless of this step having failed or passed:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"import com.kms.katalon.core.model.FailureHandling as FailureHandling\n\nWebUI.takeScreenshotAsCheckpoint('full_view', FailureHandling.CONTINUE_ON_FAILURE)\n\n")))))))}k.isMDXComponent=!0}}]);