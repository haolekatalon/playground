"use strict";(self.webpackChunkplayground=self.webpackChunkplayground||[]).push([[1076],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>b});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},s=Object.keys(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),d=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=d(t.components);return n.createElement(l.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,s=t.originalType,l=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),p=d(a),m=r,b=p["".concat(l,".").concat(m)]||p[m]||u[m]||s;return a?n.createElement(b,i(i({ref:e},c),{},{components:a})):n.createElement(b,i({ref:e},c))}));function b(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var s=a.length,i=new Array(s);i[0]=m;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=t,o[p]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<s;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},71973:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const s={id:"concept-153bbfd5-ed4a-4fb1-aa92-4cd8b588ac51",slug:"/create-tests/data-driven-testing/data-driven-testing-with-katalon-studio"},i="Data-driven testing with Katalon Studio",o={unversionedId:"concept-153bbfd5-ed4a-4fb1-aa92-4cd8b588ac51",id:"concept-153bbfd5-ed4a-4fb1-aa92-4cd8b588ac51",title:"Data-driven testing with Katalon Studio",description:"Data-driven testing \\(DDT\\) is a software testing method that stores test data in table or spreadsheet format. Data-driven testing allows testers to input a single test script that can execute tests for all test data from a table and expect the test output in the same table.",source:"@site/docs/concept-153bbfd5-ed4a-4fb1-aa92-4cd8b588ac51.mdx",sourceDirName:".",slug:"/create-tests/data-driven-testing/data-driven-testing-with-katalon-studio",permalink:"/create-tests/data-driven-testing/data-driven-testing-with-katalon-studio",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concept-153bbfd5-ed4a-4fb1-aa92-4cd8b588ac51.mdx",tags:[],version:"current",frontMatter:{id:"concept-153bbfd5-ed4a-4fb1-aa92-4cd8b588ac51",slug:"/create-tests/data-driven-testing/data-driven-testing-with-katalon-studio"},sidebar:"tutorialSidebar",previous:{title:"Native Windows Recorder in Katalon Studio",permalink:"/create-tests/record-and-spy/windows-record-and-spy-utilities/native-windows-recorder-in-katalon-studio"},next:{title:"Execution profile",permalink:"/create-tests/data-driven-testing/execution-profile"}},l={},d=[{value:"Variables",id:"variables",level:2},{value:"Test data",id:"test-data",level:2},{value:"Set parameter for your test script",id:"set-parameter-for-your-test-script",level:2},{value:"Supported data-driven testing methods",id:"supported-data-driven-testing-methods",level:2}],c={toc:d},p="wrapper";function u(t){let{components:e,...a}=t;return(0,r.kt)(p,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-driven-testing-with-katalon-studio"},"Data-driven testing with Katalon Studio"),(0,r.kt)("p",null,"Data-driven testing ","(","DDT",")"," is a software testing method that stores test data in table or spreadsheet format. Data-driven testing allows testers to input a single test script that can execute tests for all test data from a table and expect the test output in the same table."),(0,r.kt)("p",null,"Katalon Studio allows you to conduct data-driven testing with internal and external data sources at both test case and test suite levels. You can download the data-driven testing sample project from our GitHub repository: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/katalon-studio-samples/shopping-cart-tests"},"Shopping cart sample"),"."),(0,r.kt)("p",null,"This document discusses the components and the supported data-driven testing methods in Katalon Studio."),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("p",null,"Katalon Studio supports three types of variables: Global variables, Test Case variables, and Groovy variables."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Global variables")),(0,r.kt)("p",null,"Global variables are variables defined in the execution profile and can be used in a test case, test object, web service object, and email configuration within a project. To learn more about global variables, see ",(0,r.kt)("a",{parentName:"p",href:"/create-tests/data-driven-testing/global-variables"},"Global variables"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Test Case variables")),(0,r.kt)("p",null,"Test Case variables allow you to pass dynamic data into a test case. You can create test case variables and call test cases with variables in the manual and script mode."),(0,r.kt)("p",null,"To learn more about using test case variables, see ",(0,r.kt)("a",{parentName:"p",href:"/create-tests/data-driven-testing/test-case-variables"},"Test Case variables"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Groovy variables")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Katalon Studio supports Groovy from version 2.4.x onwards.")),(0,r.kt)("p",null,"Katalon Studio allows you to define variables in Groovy. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'// x is defined as a variable of String type\nString x = "Hello";\n \n// y is defined as a variable of int type\nint y = 5;\n\n// The value of the variables are printed to the console\nprintln(x);\nprintln(y);\n\n')),(0,r.kt)("p",null,"To learn more about Groovy, refer to the Apache Groovy document: ",(0,r.kt)("a",{parentName:"p",href:"http://groovy-lang.org/semantics.html"},"Groovy semantics"),"."),(0,r.kt)("h2",{id:"test-data"},"Test data"),(0,r.kt)("p",null,"Katalon Studio supports data-driven testing with external and internal data sources. You can create internal or external data files, then configure variable binding to read test data values from these files. To learn more about test data in Katalon Studio, see ",(0,r.kt)("a",{parentName:"p",href:"/create-tests/data-driven-testing/manage-test-data"},"Manage test data"),"."),(0,r.kt)("h2",{id:"set-parameter-for-your-test-script"},"Set parameter for your test script"),(0,r.kt)("p",null,"You can pass variables to your test scripts by setting parameters in test cases, test objects, or their properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/create-tests/test-objects/web-test-objects/parameterize-web-test-objects-in-katalon-studio"},"Parameterize Web Test Objects")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/create-tests/test-objects/mobile-test-objects/parameterize-mobile-test-object-properties-in-katalon-studio"},"Parameterize Mobile Test Object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/create-tests/test-objects/api-test-objects/rest-request/parameterize-a-web-service-object-in-katalon-studio"},"Parameterize Web Service Object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/create-tests/test-objects/windows-test-objects/windows-test-objects-in-katalon-studio#"},"Parameterize Windows Test Objects"))),(0,r.kt)("h2",{id:"supported-data-driven-testing-methods"},"Supported data-driven testing methods"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In a test case")),(0,r.kt)("p",null,"Katalon Studio supports data-driven testing in a test case independently from the test suite. See ",(0,r.kt)("a",{parentName:"p",href:"/create-tests/data-driven-testing/data-driven-testing-at-the-test-case-level-in-katalon-studio"},"Data-driven testing at the test case level"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In a test suite/test suite collection")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/create-tests/data-driven-testing/data-driven-testing-at-the-test-suite-level"},"Run test case with an external data source")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/create-tests/data-driven-testing/combine-multiple-data-sources-in-katalon-studio"},"Combine multiple data sources"))),(0,r.kt)("p",null,"By default, Katalon Studio converts variables to strings to conduct data-binding. However, from version 6.3.0 onwards, you can enable or disable this function and allow Katalon Studio to read variables as their data types. See: ",(0,r.kt)("a",{parentName:"p",href:"/create-tests/data-driven-testing/variable-binding-in-katalon-studio"},"Enhanced variable binding"),"."),(0,r.kt)("p",null,"Alternatively, you can also conduct data-driven testing with Groovy using the ",(0,r.kt)("code",null,"findTestData")," method. To learn about this method, you can refer to our API documentation: ",(0,r.kt)("a",{parentName:"p",href:"https://api-docs.katalon.com/com/kms/katalon/core/testdata/TestData.html"},"TestData"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In a dynamic test suite")),(0,r.kt)("p",null,"Katalon Studio supports data-driven testing in a dynamic test suite. To learn more about data-driven testing in a dynamic test suite, you can refer to this document: ",(0,r.kt)("a",{parentName:"p",href:"/create-tests/data-driven-testing/perform-data-driven-testing-in-a-dynamic-test-suite"},"Data-driven testing in a dynamic test suite"),"."),(0,r.kt)("p",null,"Learn in practice with our free Katalon Academy course: ",(0,r.kt)("a",{parentName:"p",href:"https://academy.katalon.com/courses/data-driven-testing/?utm_source=kat_docs&utm_medium=ddt_ks"},"Katalon Studio: How to Apply Data-Driven Testing"),"."))}u.isMDXComponent=!0}}]);